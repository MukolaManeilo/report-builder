services:
  nats:
    image: nats:2.10.16-alpine3.19
    platform: linux/arm64
    ports:
      - "${NATS_PORT}:8222"
    command: ["-js", "-m", "8222"]
    networks:
      - backend
    healthcheck:
      test: wget http://localhost:8222/healthz -q -S -O -
      start_period: 3s
      retries: 3
      timeout: 3s
      interval: 3s

  postgres:
    image: postgres:16-alpine
    platform: linux/arm64
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5

  ttk-collector:
    build: services/ttk-collector
    platform: linux/arm64
    environment:
      - DB_GATEWAY_PORT=${DB_GATEWAY_PORT}
      - DB_GATEWAY_HOST=db-gateway
      - DB_GATEWAY_URL=http://db-gateway:${DB_GATEWAY_PORT}
      - NATS_PORT=${NATS_PORT}
      - NATS_HOST=nats
      - NATS_URL=http://nats:${NATS_PORT}
      - TTK_COLLECTOR_PORT=${TTK_COLLECTOR_PORT}
      - TTK_COLLECTOR_HOST=ttk-collector
      - TTK_COLLECTOR_URL=http://ttk-collector:${TTK_COLLECTOR_PORT}
    ports:
      - "${TTK_COLLECTOR_PORT}:3000"
    depends_on:
      db-gateway:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 5

  fb-collector:
    build: services/fb-collector
    platform: linux/arm64
    environment:
      - DB_GATEWAY_PORT=${DB_GATEWAY_PORT}
      - DB_GATEWAY_HOST=db-gateway
      - DB_GATEWAY_URL=http://db-gateway:${DB_GATEWAY_PORT}
      - NATS_PORT=${NATS_PORT}
      - NATS_HOST=nats
      - NATS_URL=http://nats:${NATS_PORT}
      - FB_COLLECTOR_PORT=${FB_COLLECTOR_PORT}
      - FB_COLLECTOR_HOST=fb-collector
      - FB_COLLECTOR_URL=http://fb-collector:${FB_COLLECTOR_PORT}
    ports:
      - "${FB_COLLECTOR_PORT}:3000"
    depends_on:
      db-gateway:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 5

  pb-gateway:
    build: services/pb-gateway
    platform: linux/arm64
    environment:
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - PB_GATEWAY_PORT=${PB_GATEWAY_PORT}
      - PB_GATEWAY_HOST=pb-gateway
      - PB_GATEWAY_URL=http://pb-gateway:${PB_GATEWAY_PORT}
      - NATS_PORT=${NATS_PORT}
      - NATS_HOST=nats
      - NATS_URL=http://nats:${NATS_PORT}
      - TTK_COLLECTOR_PORT=${TTK_COLLECTOR_PORT}
      - TTK_COLLECTOR_HOST=ttk-collector
      - TTK_COLLECTOR_URL=http://ttk-collector:${TTK_COLLECTOR_PORT}
      - FB_COLLECTOR_PORT=${FB_COLLECTOR_PORT}
      - FB_COLLECTOR_HOST=fb-collector
      - FB_COLLECTOR_URL=http://fb-collector:${FB_COLLECTOR_PORT}
    ports:
      - "${DB_GATEWAY_PORT}:3000"
    depends_on:
      fb-collector:
        condition: service_healthy
      ttk-collector:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 5

  db-gateway:
    build: services/db-gateway
    platform: linux/arm64
    environment:
      - DB_GATEWAY_PORT=${DB_GATEWAY_PORT}
      - DB_GATEWAY_HOST=db-gateway
      - DB_GATEWAY_URL=http://db-gateway:${DB_GATEWAY_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - DB_HOST=postgres
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}
    ports:
      - "${DB_GATEWAY_PORT}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 5

  publisher:
    image: andriiuni/events
    platform: linux/arm64
    environment:
      - EVENT_ENDPOINT=http://pb-gateway:${PB_GATEWAY_PORT}/webhook
    depends_on:
      pb-gateway:
        condition: service_healthy
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
